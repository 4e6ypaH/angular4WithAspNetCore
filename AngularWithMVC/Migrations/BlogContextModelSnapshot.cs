// <auto-generated />
using AngularWithMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AngularWithMVC.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularWithMVC.Domain.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<DateTime>("PublishDate");

                    b.Property<int>("ReadCounts");

                    b.Property<string>("Subject");

                    b.Property<int>("WriterId");

                    b.HasKey("Id");

                    b.HasIndex("WriterId");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("AngularWithMVC.Domain.BlogPostRead", b =>
                {
                    b.Property<int>("BlogPostId");

                    b.Property<int>("ReaderId");

                    b.HasKey("BlogPostId", "ReaderId");

                    b.HasIndex("ReaderId");

                    b.ToTable("BlogPostReads");
                });

            modelBuilder.Entity("AngularWithMVC.Domain.Reader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Readers");
                });

            modelBuilder.Entity("AngularWithMVC.Domain.Writer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Writers");
                });

            modelBuilder.Entity("AngularWithMVC.Domain.BlogPost", b =>
                {
                    b.HasOne("AngularWithMVC.Domain.Writer", "Writer")
                        .WithMany("BlogPosts")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AngularWithMVC.Domain.BlogPostRead", b =>
                {
                    b.HasOne("AngularWithMVC.Domain.BlogPost", "BlogPost")
                        .WithMany("BlogPostReads")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AngularWithMVC.Domain.Reader", "Reader")
                        .WithMany("BlogPostReads")
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
